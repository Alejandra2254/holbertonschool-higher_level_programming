The ``integer_validator`` module:
==============================

Using ``integer validator``
------------------------------

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	
Validate cases:
	
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", 12)

	 >>> bg.integer_validator("width", 89)

	 >>> bg.integer_validator("name", "John")
	 Traceback (most recent call last):
	 ...
	 TypeError: name must be an integer

	 >>> bg.integer_validator("age", 0)
	 Traceback (most recent call last):
	 ...
	 ValueError: age must be greater than 0

	 >>> bg.integer_validator("Bogota", 3 + 6)

	 >>> bg.integer_validator("Medellin", 'Hello')
	 Traceback (most recent call last):
	 ...
	 TypeError: Medellin must be an integer

	 >>> bg.integer_validator("Cali", -153)
	 Traceback (most recent call last):
	 ...
	 ValueError: Cali must be greater than 0

	 >>> bg.integer_validator("SF", 0)
	 Traceback (most recent call last):
	 ...
	 ValueError: SF must be greater than 0
	 
	 >>> bg.integer_validator("age", [3])
	 Traceback (most recent call last):
	 ...
	 TypeError: age must be an integer

	 >>> bg.area()
	 Traceback (most recent call last):
    	 ...
    	 Exception: area() is not implemented
	 
	 >>> bg.area(5)
	 Traceback (most recent call last):
    	 ...
    	 TypeError: area() takes 1 positional argument but 2 were given
	 
	 >>> bg.integer_validator("ale", None)
	 Traceback (most recent call last):
    	 ...
	 TypeError: ale must be an integer
